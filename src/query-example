#!/usr/bin/python3

import datetime
import ipaddress
import os
import pprint
import sys

import AtlasMNS
import AtlasMNSLogger


# ###### Main program #######################################################
if len(sys.argv) < 2:
   sys.stderr.write('Usage: ' + sys.argv[0] + ' configuration_file\n')
   sys.exit(1)

# ====== Initialise =========================================================
atlasMNSLogger = AtlasMNSLogger.AtlasMNSLogger(AtlasMNSLogger.TRACE)
atlasMNS = AtlasMNS.AtlasMNS()
if not atlasMNS.loadConfiguration(sys.argv[1]):
   sys.exit(1)

if not atlasMNS.connectToResultsDB():
   sys.exit(1)


# ====== Query results ======================================================
ts_as_datetime = datetime.datetime.utcnow() - datetime.timedelta(seconds = 3600)
ts_as_seconds  = (ts_as_datetime - datetime.datetime.utcfromtimestamp(0)).total_seconds()


print('RIPE Atlas Traceroute results since ' + str(ts_as_datetime) + ':')
results = atlasMNS.results_db['ripeatlastraceroute'].find(
                { "timestamp": { "$gt": ts_as_seconds } }
             ).sort("timestamp")
i = 1
for entry in results:
   print(' - #' +str(i) + ':')
   pprint.pprint(entry, indent=3)
   i = i + 1


print('Atlas/MNS results since ' + str(ts_as_datetime) + ':')
results = atlasMNS.results_db['atlasmns'].find(
                { "timestamp": { "$gt": ts_as_datetime } }
             ).sort("timestamp")
i = 1
for entry in results:
   print(' - #' +str(i) + ':')
   pprint.pprint(entry, indent=3)
   i = i + 1
